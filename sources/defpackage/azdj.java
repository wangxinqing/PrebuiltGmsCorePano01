package defpackage;

/* renamed from: azdj  reason: default package */
/* compiled from: :com.google.android.gms@201216073@20.12.16 (080306-306753009) */
public final class azdj implements azde {
    public static final agvx a;
    public static final agvx b;
    public static final agvx c;
    public static final agvx d;
    public static final agvx e;
    public static final agvx f;
    public static final agvx g;
    public static final agvx h;
    public static final agvx i;
    public static final agvx j;
    public static final agvx k;
    public static final agvx l;
    public static final agvx m;

    /* JADX WARNING: type inference failed for: r3v23, types: [byte[]] */
    static {
        agvw agvw = new agvw(agvj.a("com.google.android.gms.platformconfigurator"));
        try {
            a = agvx.a(agvw, "ModuleConfig__boot_commit_packages", (auib) aucj.a((aucj) auib.b, new byte[]{10, 28, 97, 99, 116, 105, 118, 105, 116, 121, 95, 109, 97, 110, 97, 103, 101, 114, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 10, 17, 105, 110, 112, 117, 116, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 10, 13, 114, 111, 108, 108, 98, 97, 99, 107, 95, 98, 111, 111, 116, 10, 19, 114, 117, 110, 116, 105, 109, 101, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 10, 19, 115, 116, 111, 114, 97, 103, 101, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 10, 26, 119, 105, 110, 100, 111, 119, 95, 109, 97, 110, 97, 103, 101, 114, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116}), azdf.a);
            b = agvx.a(agvw, "ModuleConfig__enable_device_config", true);
            c = agvx.a(agvw, "ModuleConfig__enable_platform_boot", true);
            d = agvx.a(agvw, "ModuleConfig__enable_rescue_party", false);
            e = agvx.a(agvw, "ModuleConfig__enable_tagged_puts", false);
            f = agvx.a(agvw, "ModuleConfig__enable_versioned_namespaces", false);
            g = agvx.a(agvw, "ModuleConfig__ignore_integrity_check_for_atomic_writes", true);
            try {
                h = agvx.a(agvw, "ModuleConfig__immediate_commit_packages", (auib) aucj.a((aucj) auib.b, new byte[]{10, 16, 97, 99, 116, 105, 118, 105, 116, 121, 95, 109, 97, 110, 97, 103, 101, 114, 10, 10, 97, 112, 112, 95, 99, 111, 109, 112, 97, 116, 10, 25, 97, 116, 116, 101, 110, 116, 105, 111, 110, 95, 109, 97, 110, 97, 103, 101, 114, 95, 115, 101, 114, 118, 105, 99, 101, 10, 8, 97, 117, 116, 111, 102, 105, 108, 108, 10, 14, 98, 97, 99, 107, 117, 112, 95, 115, 101, 114, 118, 105, 99, 101, 10, 3, 99, 97, 114, 10, 13, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 10, 12, 99, 111, 110, 110, 101, 99, 116, 105, 118, 105, 116, 121, 10, 34, 99, 111, 110, 110, 101, 99, 116, 105, 118, 105, 116, 121, 95, 116, 104, 101, 114, 109, 97, 108, 95, 112, 111, 119, 101, 114, 95, 109, 97, 110, 97, 103, 101, 114, 10, 15, 99, 111, 110, 116, 101, 110, 116, 95, 99, 97, 112, 116, 117, 114, 101, 10, 31, 100, 101, 118, 105, 99, 101, 95, 112, 101, 114, 115, 111, 110, 97, 108, 105, 122, 97, 116, 105, 111, 110, 95, 115, 101, 114, 118, 105, 99, 101, 115, 10, 15, 100, 105, 115, 112, 108, 97, 121, 95, 109, 97, 110, 97, 103, 101, 114, 10, 8, 102, 108, 105, 112, 101, 110, 100, 111, 10, 11, 103, 97, 109, 101, 95, 100, 114, 105, 118, 101, 114, 10, 20, 105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101, 95, 98, 117, 98, 98, 108, 101, 115, 10, 8, 108, 97, 117, 110, 99, 104, 101, 114, 10, 11, 110, 101, 116, 100, 95, 110, 97, 116, 105, 118, 101, 10, 22, 110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 95, 97, 115, 115, 105, 115, 116, 97, 110, 116, 10, 4, 111, 115, 108, 111, 10, 23, 112, 97, 99, 107, 97, 103, 101, 95, 109, 97, 110, 97, 103, 101, 114, 95, 115, 101, 114, 118, 105, 99, 101, 10, 7, 112, 114, 105, 118, 97, 99, 121, 10, 8, 114, 111, 108, 108, 98, 97, 99, 107, 10, 7, 114, 117, 110, 116, 105, 109, 101, 10, 14, 114, 117, 110, 116, 105, 109, 101, 95, 110, 97, 116, 105, 118, 101, 10, 16, 115, 121, 115, 116, 101, 109, 95, 115, 99, 104, 101, 100, 117, 108, 101, 114, 10, 8, 115, 121, 115, 116, 101, 109, 117, 105, 10, 9, 116, 101, 108, 101, 112, 104, 111, 110, 121, 10, 14, 116, 101, 120, 116, 99, 108, 97, 115, 115, 105, 102, 105, 101, 114, 10, 6, 119, 105, 100, 103, 101, 116, 10, 4, 119, 105, 102, 105, 10, 14, 119, 105, 110, 100, 111, 119, 95, 109, 97, 110, 97, 103, 101, 114}), azdg.a);
                i = agvx.a(agvw, "ModuleConfig__match_apex_flag_enabled", true);
                agvx.a(agvw, "platform_settings_to_log", "");
                j = agvx.a(agvw, "ModuleConfig__propagate_updated_package_only", true);
                k = agvx.a(agvw, "ModuleConfig__use_atomic_writes_on_r", true);
                try {
                    l = agvx.a(agvw, "ModuleConfig__versioned_boot_commit_packages", (auib) aucj.a((aucj) auib.b, new byte[]{10, 29, 97, 99, 116, 105, 118, 105, 116, 121, 95, 109, 97, 110, 97, 103, 101, 114, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 58, 10, 9, 100, 101, 120, 95, 98, 111, 111, 116, 58, 10, 18, 105, 110, 112, 117, 116, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 58, 10, 14, 114, 111, 108, 108, 98, 97, 99, 107, 95, 98, 111, 111, 116, 58, 10, 20, 114, 117, 110, 116, 105, 109, 101, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 58, 10, 20, 115, 116, 111, 114, 97, 103, 101, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 58, 10, 27, 119, 105, 110, 100, 111, 119, 95, 109, 97, 110, 97, 103, 101, 114, 95, 110, 97, 116, 105, 118, 101, 95, 98, 111, 111, 116, 58}), azdh.a);
                    try {
                        m = agvx.a(agvw, "ModuleConfig__versioned_immediate_commit_packages", (auib) aucj.a((aucj) auib.b, (byte[]) new byte[]{10, 17, 97, 99, 116, 105, 118, 105, 116, 121, 95, 109, 97, 110, 97, 103, 101, 114, 58, 10, 11, 97, 112, 112, 95, 99, 111, 109, 112, 97, 116, 58, 10, 26, 97, 116, 116, 101, 110, 116, 105, 111, 110, 95, 109, 97, 110, 97, 103, 101, 114, 95, 115, 101, 114, 118, 105, 99, 101, 58, 10, 9, 97, 117, 116, 111, 102, 105, 108, 108, 58, 10, 15, 98, 97, 99, 107, 117, 112, 95, 115, 101, 114, 118, 105, 99, 101, 58, 10, 4, 99, 97, 114, 58, 10, 14, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 58, 10, 38, 99, 111, 110, 110, 101, 99, 116, 105, 118, 105, 116, 121, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 114, 101, 115, 111, 108, 118, 10, 35, 99, 111, 110, 110, 101, 99, 116, 105, 118, 105, 116, 121, 95, 116, 104, 101, 114, 109, 97, 108, 95, 112, 111, 119, 101, 114, 95, 109, 97, 110, 97, 103, 101, 114, 58, 10, 16, 99, 111, 110, 116, 101, 110, 116, 95, 99, 97, 112, 116, 117, 114, 101, 58, 10, 53, 100, 101, 118, 105, 99, 101, 95, 112, 101, 114, 115, 111, 110, 97, 108, 105, 122, 97, 116, 105, 111, 110, 95, 115, 101, 114, 118, 105, 99, 101, 115, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 97, 115, 10, 46, 100, 105, 115, 112, 108, 97, 121, 95, 109, 97, 110, 97, 103, 101, 114, 58, 99, 111, 109, 46, 97, 110, 100, 114, 111, 105, 100, 46, 114, 101, 102, 114, 101, 115, 104, 114, 97, 116, 101, 99, 111, 110, 116, 114, 111, 108, 10, 9, 102, 108, 105, 112, 101, 110, 100, 111, 58, 10, 12, 103, 97, 109, 101, 95, 100, 114, 105, 118, 101, 114, 58, 10, 42, 105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101, 95, 98, 117, 98, 98, 108, 101, 115, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 97, 115, 10, 46, 108, 97, 117, 110, 99, 104, 101, 114, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 97, 112, 112, 115, 46, 110, 101, 120, 117, 115, 108, 97, 117, 110, 99, 104, 101, 114, 10, 37, 110, 101, 116, 100, 95, 110, 97, 116, 105, 118, 101, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 114, 101, 115, 111, 108, 118, 10, 43, 110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 95, 97, 115, 115, 105, 115, 116, 97, 110, 116, 58, 97, 110, 100, 114, 111, 105, 100, 46, 101, 120, 116, 46, 115, 101, 114, 118, 105, 99, 101, 115, 10, 20, 111, 115, 108, 111, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 111, 115, 108, 111, 10, 24, 112, 97, 99, 107, 97, 103, 101, 95, 109, 97, 110, 97, 103, 101, 114, 95, 115, 101, 114, 118, 105, 99, 101, 58, 10, 47, 112, 114, 105, 118, 97, 99, 121, 58, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 97, 110, 100, 114, 111, 105, 100, 46, 112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 99, 111, 110, 116, 114, 111, 108, 108, 101, 114, 10, 9, 114, 111, 108, 108, 98, 97, 99, 107, 58, 10, 8, 114, 117, 110, 116, 105, 109, 101, 58, 10, 15, 114, 117, 110, 116, 105, 109, 101, 95, 110, 97, 116, 105, 118, 101, 58, 10, 17, 115, 121, 115, 116, 101, 109, 95, 115, 99, 104, 101, 100, 117, 108, 101, 114, 58, 10, 9, 115, 121, 115, 116, 101, 109, 117, 105, 58, 10, 10, 116, 101, 108, 101, 112, 104, 111, 110, 121, 58, 10, 15, 116, 101, 120, 116, 99, 108, 97, 115, 115, 105, 102, 105, 101, 114, 58, 10, 7, 119, 105, 100, 103, 101, 116, 58, 10, 5, 119, 105, 102, 105, 58, 10, 15, 119, 105, 110, 100, 111, 119, 95, 109, 97, 110, 97, 103, 101, 114, 58}), azdi.a);
                    } catch (auda e2) {
                        throw new AssertionError("Could not parse proto flag \"ModuleConfig__versioned_immediate_commit_packages\"");
                    }
                } catch (auda e3) {
                    throw new AssertionError("Could not parse proto flag \"ModuleConfig__versioned_boot_commit_packages\"");
                }
            } catch (auda e4) {
                throw new AssertionError("Could not parse proto flag \"ModuleConfig__immediate_commit_packages\"");
            }
        } catch (auda e5) {
            throw new AssertionError("Could not parse proto flag \"ModuleConfig__boot_commit_packages\"");
        }
    }

    public final auib a() {
        return (auib) a.c();
    }

    public final boolean b() {
        return ((Boolean) b.c()).booleanValue();
    }

    public final boolean c() {
        return ((Boolean) c.c()).booleanValue();
    }

    public final boolean d() {
        return ((Boolean) d.c()).booleanValue();
    }

    public final boolean e() {
        return ((Boolean) e.c()).booleanValue();
    }

    public final boolean f() {
        return ((Boolean) f.c()).booleanValue();
    }

    public final boolean g() {
        return ((Boolean) g.c()).booleanValue();
    }

    public final auib h() {
        return (auib) h.c();
    }

    public final boolean i() {
        return ((Boolean) i.c()).booleanValue();
    }

    public final boolean j() {
        return ((Boolean) j.c()).booleanValue();
    }

    public final boolean k() {
        return ((Boolean) k.c()).booleanValue();
    }

    public final auib l() {
        return (auib) l.c();
    }

    public final auib m() {
        return (auib) m.c();
    }
}
